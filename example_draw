    <script>
  

     var map,
    outputPanel,
    circle,
    mouseDownEventHandler,
    mouseMoveEventHandler,
    mouseUpEventHandler;

    function GetMap()
    {
    outputPanel = document.getElementById('output');
    latitude = document.getElementById('latitude');
    longitude = document.getElementById('longitude');
 
    map = new Microsoft.Maps.Map('#myMap', {});
            //Load the spatial math module
            
            Microsoft.Maps.loadModule("Microsoft.Maps.SpatialMath", function () {
                ClearDrawing();
                //Create a center point for the circle.
                var center = new Microsoft.Maps.Location(latitude.value, longitude.value);
                //Create a polygon for the circle.
                circle = new Microsoft.Maps.Polygon([center, center, center]);
                //store the center point in the polygons metadata.
                circle.metadata = {
                    center: center
                };
                map.entities.push(circle);
                //Calculate circle locations.
                var locs = Microsoft.Maps.SpatialMath.getRegularPolygon(center, outputPanel.value, 36, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);
                //Update the circle's location.
                circle.setLocations(locs);

                map.setView({ center: center, zoom: 5 });
 
         
        
   
    }
    function DrawCirclefrom(latitude, longitude, distance) {
    
}
    function DrawCircle() {
    ClearDrawing();
    mouseDownEventHandler = Microsoft.Maps.Events.addHandler(map, 'mousedown', function (e) {
    //Lock map so it doesn't move when dragging.
    map.setOptions({ disablePanning: true });
    //Create a polygon for the circle.
    // alert(e.location);
    circle = new Microsoft.Maps.Polygon([e.location, e.location, e.location]);
    // alert(circle);
    //store the center point in the polygons metadata.
    circle.metadata = {
    center: e.location
    };
    map.entities.push(circle);
    });
    mouseMoveEventHandler = Microsoft.Maps.Events.addHandler(map, 'mousemove', function (e) {
    if (circle) {
    UpdateCircle(e);
    }
    });
    mouseUpEventHandler = Microsoft.Maps.Events.addHandler(map, 'mouseup', function (e) {
    UpdateCircle(e);
    //Unlock map panning.
    map.setOptions({ disablePanning: false });
    //Remove event handlers.
    Microsoft.Maps.Events.removeHandler(mouseDownEventHandler);
    Microsoft.Maps.Events.removeHandler(mouseMoveEventHandler);
    Microsoft.Maps.Events.removeHandler(mouseUpEventHandler);
    });
    }
    function ClearDrawing() {
    map.entities.clear();
    circle = null;
    outputPanel.innerHTML = '';
    latitude.innerHTML = '';
    longitude.innerHTML = '';
    }
    function UpdateCircle(e) {
    //Calculate distance from circle center to mouse.
    var distance = Microsoft.Maps.SpatialMath.getDistanceTo(circle.metadata.center, e.location, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);
     // alert(circle.metadata.center);
    //Calculate circle locations.
    var locs = Microsoft.Maps.SpatialMath.getRegularPolygon(circle.metadata.center, distance, 36, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);
   
    //Update the circles location.
    circle.setLocations(locs);
    //Display the radius in miles rounded to 2 decimal places.
    outputPanel.value =  Math.round(distance*1000)/1000 ;
    var loc = e.location;
    
                var circleCenter = circle.metadata.center;
                // var latitude = circleCenter.latitude;
                // var longitude = circleCenter.longitude;
     //Get the new latitude and longitude
                var newLat = circleCenter.latitude;
                var newLng = circleCenter.longitude;
                console.log("New latitude: " + newLat);
                console.log("New longitude: " + newLng);
                latitude.value =  newLat;
                longitude.value = newLng;
    
                // document.getElementById('latitude_in').val(newLat);
                // document.getElementById('longitude_in').val(newLng);
                // document.getElementById('distance_in').val(Math.round(distance*1000)/1000 );
    
    }
 
    </script>
